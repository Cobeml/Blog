[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/picture_memory/index.html",
    "href": "posts/picture_memory/index.html",
    "title": "Picture Memory",
    "section": "",
    "text": "Here are two picture memory experiments. One manipulates the duration that the picture was initally displayed and the other shows each image with either a red, green, yellow, blue, or purple and manipulates if the image was shown again with the same color background.\nPicture Memory with Manipulated Duration Picture Memory with Manipulated Colored Background Consistency"
  },
  {
    "objectID": "posts/data-analysis/index.html",
    "href": "posts/data-analysis/index.html",
    "title": "Data Analysis",
    "section": "",
    "text": "Downloading Data\n\n# install from the Packages tab, or run the below in the console once.\n#install.packages('tidyverse')\n#install.packages('rio')\n\n# load libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rio)\n\n# get data file names\nfile_names &lt;- list.files(\"sample_data\",full.names = TRUE)\n\n# initialize data frame to hold individual subject data\nall_data &lt;- tibble()\n\n# loop through each file and import\nfor(i in 1:length(file_names)) {\n  \n  # import a single data file to a temporary data frame\n  temp_df &lt;- rio::import(file_names[i]) %&gt;%\n    mutate(subject = i)\n  \n  # append the single subject data to larger data frame\n  all_data &lt;- rbind(all_data,temp_df)\n  \n}\n\nAnalysis of sample data analyzing reaction time differences between incongruent and congruent trials:\n\n# pre-process and filter rows\nfiltered_data &lt;- all_data %&gt;%\n  filter(task == \"stroop\",\n         correct == \"TRUE\") %&gt;%\n  mutate(rt = as.numeric(rt))\n\n# get individual subject means in each condition\nsubject_mean_RT &lt;- filtered_data %&gt;%\n  group_by(subject,congruency) %&gt;%\n  summarize(mean_rt = mean(rt), .groups = \"drop\")\n\n# get group means in each condition\ngroup_mean_RT &lt;- subject_mean_RT %&gt;%\n  group_by(congruency) %&gt;%\n  summarize(mean_reaction_time = mean(mean_rt),\n            sem = sd(mean_rt)/sqrt(length(mean_rt))\n            )\n\n# plot\nggplot(group_mean_RT, aes(x=congruency,y=mean_reaction_time)) +\n  geom_bar(stat=\"identity\") +\n  geom_errorbar(aes(ymin=mean_reaction_time-sem,\n                    ymax=mean_reaction_time+sem),\n                width=.2) +\n  ylab(\"Mean Reaction Time (ms)\") +\n  xlab(\"Congruency\")+\n  coord_cartesian(ylim=c(400,800)) +\n  theme_classic()\n\n\n\n\nAnalysis of sample data analyzing error rate differences between congruent and incongruent trials:\n\n# pre-process and filter rows\nfiltered_data_pc &lt;- all_data %&gt;%\n  filter(task == \"stroop\")\n\n# get individual subject proportion correct values\nsubject_pc &lt;- filtered_data_pc %&gt;%\n  group_by(subject,congruency) %&gt;%\n  summarize(proportion_correct = mean(correct), .groups = \"drop\")\n\n# get group means in each condition\ngroup_mean_pc &lt;- subject_pc %&gt;%\n  group_by(congruency) %&gt;%\n  summarize(mean_proportion_correct = mean(proportion_correct),\n            sem = sd(proportion_correct)/sqrt(length(proportion_correct))\n            )\n\n# plot\nggplot(group_mean_pc, aes(x=congruency,y=mean_proportion_correct)) +\n  geom_bar(stat=\"identity\") +\n  geom_errorbar(aes(ymin=mean_proportion_correct-sem,\n                    ymax=mean_proportion_correct+sem),\n                width=.2) +\n  ylab(\"Mean Proportion Correct\") +\n  xlab(\"Congruency\")+\n  coord_cartesian(ylim=c(0.5,1)) +\n  theme_classic()"
  },
  {
    "objectID": "posts/data-analysis/index.html#sample-data-analusis",
    "href": "posts/data-analysis/index.html#sample-data-analusis",
    "title": "Data Analysis",
    "section": "",
    "text": "Downloading Data\n\n# install from the Packages tab, or run the below in the console once.\n#install.packages('tidyverse')\n#install.packages('rio')\n\n# load libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rio)\n\n# get data file names\nfile_names &lt;- list.files(\"sample_data\",full.names = TRUE)\n\n# initialize data frame to hold individual subject data\nall_data &lt;- tibble()\n\n# loop through each file and import\nfor(i in 1:length(file_names)) {\n  \n  # import a single data file to a temporary data frame\n  temp_df &lt;- rio::import(file_names[i]) %&gt;%\n    mutate(subject = i)\n  \n  # append the single subject data to larger data frame\n  all_data &lt;- rbind(all_data,temp_df)\n  \n}\n\nAnalysis of sample data analyzing reaction time differences between incongruent and congruent trials:\n\n# pre-process and filter rows\nfiltered_data &lt;- all_data %&gt;%\n  filter(task == \"stroop\",\n         correct == \"TRUE\") %&gt;%\n  mutate(rt = as.numeric(rt))\n\n# get individual subject means in each condition\nsubject_mean_RT &lt;- filtered_data %&gt;%\n  group_by(subject,congruency) %&gt;%\n  summarize(mean_rt = mean(rt), .groups = \"drop\")\n\n# get group means in each condition\ngroup_mean_RT &lt;- subject_mean_RT %&gt;%\n  group_by(congruency) %&gt;%\n  summarize(mean_reaction_time = mean(mean_rt),\n            sem = sd(mean_rt)/sqrt(length(mean_rt))\n            )\n\n# plot\nggplot(group_mean_RT, aes(x=congruency,y=mean_reaction_time)) +\n  geom_bar(stat=\"identity\") +\n  geom_errorbar(aes(ymin=mean_reaction_time-sem,\n                    ymax=mean_reaction_time+sem),\n                width=.2) +\n  ylab(\"Mean Reaction Time (ms)\") +\n  xlab(\"Congruency\")+\n  coord_cartesian(ylim=c(400,800)) +\n  theme_classic()\n\n\n\n\nAnalysis of sample data analyzing error rate differences between congruent and incongruent trials:\n\n# pre-process and filter rows\nfiltered_data_pc &lt;- all_data %&gt;%\n  filter(task == \"stroop\")\n\n# get individual subject proportion correct values\nsubject_pc &lt;- filtered_data_pc %&gt;%\n  group_by(subject,congruency) %&gt;%\n  summarize(proportion_correct = mean(correct), .groups = \"drop\")\n\n# get group means in each condition\ngroup_mean_pc &lt;- subject_pc %&gt;%\n  group_by(congruency) %&gt;%\n  summarize(mean_proportion_correct = mean(proportion_correct),\n            sem = sd(proportion_correct)/sqrt(length(proportion_correct))\n            )\n\n# plot\nggplot(group_mean_pc, aes(x=congruency,y=mean_proportion_correct)) +\n  geom_bar(stat=\"identity\") +\n  geom_errorbar(aes(ymin=mean_proportion_correct-sem,\n                    ymax=mean_proportion_correct+sem),\n                width=.2) +\n  ylab(\"Mean Proportion Correct\") +\n  xlab(\"Congruency\")+\n  coord_cartesian(ylim=c(0.5,1)) +\n  theme_classic()"
  },
  {
    "objectID": "posts/html-javascript/index.html",
    "href": "posts/html-javascript/index.html",
    "title": "HTML/JavaScript",
    "section": "",
    "text": "Here I will be creating a simple interactive html page using html and javascript.\nHTML Page CSS"
  },
  {
    "objectID": "jspsych/examples/README-template.html",
    "href": "jspsych/examples/README-template.html",
    "title": "Blog",
    "section": "",
    "text": "jspsych logo\njsPsych is a JavaScript framework for creating behavioral experiments that run in a web browser."
  },
  {
    "objectID": "jspsych/examples/README-template.html#plugin-description",
    "href": "jspsych/examples/README-template.html#plugin-description",
    "title": "Blog",
    "section": "Plugin Description",
    "text": "Plugin Description\nThe XXXXXX plugin does XXXXXX."
  },
  {
    "objectID": "jspsych/examples/README-template.html#examples",
    "href": "jspsych/examples/README-template.html#examples",
    "title": "Blog",
    "section": "Examples",
    "text": "Examples\nSeveral example experiments and plugin demonstrations are available in the /examples folder. After you’ve downloaded the latest release, double-click on an example HTML file to run it in your web browser, and open it with a programming-friendly text editor to see how it works."
  },
  {
    "objectID": "jspsych/examples/README-template.html#documentation",
    "href": "jspsych/examples/README-template.html#documentation",
    "title": "Blog",
    "section": "Documentation",
    "text": "Documentation\nDocumentation for this plugin is available here."
  },
  {
    "objectID": "jspsych/examples/README-template.html#getting-help",
    "href": "jspsych/examples/README-template.html#getting-help",
    "title": "Blog",
    "section": "Getting help",
    "text": "Getting help\nFor questions about using the library, please use the GitHub discussions forum. You can also browse through the history of Q&A on the forum to find related questions."
  },
  {
    "objectID": "jspsych/examples/README-template.html#contributing",
    "href": "jspsych/examples/README-template.html#contributing",
    "title": "Blog",
    "section": "Contributing",
    "text": "Contributing\nWe :heart: contributions! See the contributing to jsPsych documentation page for more information about how you can help."
  },
  {
    "objectID": "jspsych/examples/README-template.html#citation",
    "href": "jspsych/examples/README-template.html#citation",
    "title": "Blog",
    "section": "Citation",
    "text": "Citation\nIf you use this library in academic work, the preferred citation is:\nde Leeuw, J.R., Gilbert, R.A., & Luchterhandt, B. (2023). jsPsych: Enabling an open-source collaborative ecosystem of behavioral experiments. Journal of Open Source Software, 8(85), 5351, https://joss.theoj.org/papers/10.21105/joss.05351.\nThis paper is an updated description of jsPsych and includes all current core team members. It replaces the earlier paper that described jsPsych:\nde Leeuw, J.R. (2015). jsPsych: A JavaScript library for creating behavioral experiments in a Web browser. Behavior Research Methods, 47(1), 1-12. doi:10.3758/s13428-014-0458-y\nCitations help us demonstrate that this library is used and valued, which allows us to continue working on it."
  },
  {
    "objectID": "jspsych/examples/README-template.html#contributors",
    "href": "jspsych/examples/README-template.html#contributors",
    "title": "Blog",
    "section": "Contributors",
    "text": "Contributors\njsPsych is open source project with numerous contributors. The project is currently managed by the core team of Josh de Leeuw (@jodeleeuw), Becky Gilbert (@becky-gilbert), and Björn Luchterhandt (@bjoluc).\njsPsych was created by Josh de Leeuw.\nWe’re also grateful for the generous support from a Mozilla Open Source Support award, which funded development of the library from 2020-2021."
  },
  {
    "objectID": "jspsych/VERSION.html",
    "href": "jspsych/VERSION.html",
    "title": "Blog",
    "section": "",
    "text": "Included in this release:\n\n\n\n\n\n\n\n\nPackage\nVersion\nDocumentation\n\n\n\n\njspsych\n7.3.3\nhttps://www.jspsych.org/7.3/\n\n\nextension-mouse-tracking\n1.0.2\nhttps://www.jspsych.org/7.3/extensions/mouse-tracking\n\n\nextension-record-video\n1.0.1\nhttps://www.jspsych.org/7.3/extensions/record-video\n\n\nextension-webgazer\n1.0.2\nhttps://www.jspsych.org/7.3/extensions/webgazer\n\n\nplugin-animation\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/animation\n\n\nplugin-audio-button-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/audio-button-response\n\n\nplugin-audio-keyboard-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/audio-keyboard-response\n\n\nplugin-audio-slider-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/audio-slider-response\n\n\nplugin-browser-check\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/browser-check\n\n\nplugin-call-function\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/call-function\n\n\nplugin-canvas-button-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/canvas-button-response\n\n\nplugin-canvas-keyboard-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/canvas-keyboard-response\n\n\nplugin-canvas-slider-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/canvas-slider-response\n\n\nplugin-categorize-animation\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/categorize-animation\n\n\nplugin-categorize-html\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/categorize-html\n\n\nplugin-categorize-image\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/categorize-image\n\n\nplugin-cloze\n1.2.0\nhttps://www.jspsych.org/7.3/plugins/cloze\n\n\nplugin-external-html\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/external-html\n\n\nplugin-free-sort\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/free-sort\n\n\nplugin-fullscreen\n1.2.0\nhttps://www.jspsych.org/7.3/plugins/fullscreen\n\n\nplugin-html-audio-response\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/html-audio-response\n\n\nplugin-html-button-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/html-button-response\n\n\nplugin-html-keyboard-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/html-keyboard-response\n\n\nplugin-html-slider-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/html-slider-response\n\n\nplugin-html-video-response\n1.0.1\nhttps://www.jspsych.org/7.3/plugins/html-video-response\n\n\nplugin-iat-html\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/iat-html\n\n\nplugin-iat-image\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/iat-image\n\n\nplugin-image-button-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/image-button-response\n\n\nplugin-image-keyboard-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/image-keyboard-response\n\n\nplugin-image-slider-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/image-slider-response\n\n\nplugin-initialize-camera\n1.0.1\nhttps://www.jspsych.org/7.3/plugins/initialize-camera\n\n\nplugin-initialize-microphone\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/initialize-microphone\n\n\nplugin-instructions\n1.1.3\nhttps://www.jspsych.org/7.3/plugins/instructions\n\n\nplugin-maxdiff\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/maxdiff\n\n\nplugin-mirror-camera\n1.0.1\nhttps://www.jspsych.org/7.3/plugins/mirror-camera\n\n\nplugin-preload\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/preload\n\n\nplugin-reconstruction\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/reconstruction\n\n\nplugin-resize\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/resize\n\n\nplugin-same-different-html\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/same-different-html\n\n\nplugin-same-different-image\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/same-different-image\n\n\nplugin-serial-reaction-time-mouse\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/serial-reaction-time-mouse\n\n\nplugin-serial-reaction-time\n1.1.3\nhttps://www.jspsych.org/7.3/plugins/serial-reaction-time\n\n\nplugin-sketchpad\n1.0.3\nhttps://www.jspsych.org/7.3/plugins/sketchpad\n\n\nplugin-survey-html-form\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/survey-html-form\n\n\nplugin-survey-likert\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/survey-likert\n\n\nplugin-survey-multi-choice\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/survey-multi-choice\n\n\nplugin-survey-multi-select\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/survey-multi-select\n\n\nplugin-survey-text\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/survey-text\n\n\nplugin-survey\n0.2.1\nhttps://www.jspsych.org/7.3/plugins/survey\n\n\nplugin-video-button-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/video-button-response\n\n\nplugin-video-keyboard-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/video-keyboard-response\n\n\nplugin-video-slider-response\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/video-slider-response\n\n\nplugin-virtual-chinrest\n2.0.2\nhttps://www.jspsych.org/7.3/plugins/virtual-chinrest\n\n\nplugin-visual-search-circle\n1.1.2\nhttps://www.jspsych.org/7.3/plugins/visual-search-circle\n\n\nplugin-webgazer-calibrate\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/webgazer-calibrate\n\n\nplugin-webgazer-init-camera\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/webgazer-init-camera\n\n\nplugin-webgazer-validate\n1.0.2\nhttps://www.jspsych.org/7.3/plugins/webgazer-validate"
  },
  {
    "objectID": "jspsych/code-of-conduct.html",
    "href": "jspsych/code-of-conduct.html",
    "title": "jsPsych Code of Conduct",
    "section": "",
    "text": "jsPsych aims to provide a productive, helpful, and agile community that: * Welcomes new users and ideas * Seeks to improve the jsPsych library for all users * Works toward best scientific practices * Ensures that jsPsych remains as accessible as possible\nWe hope that this community will encourage collaboration between users/groups with different needs, interests, and skills.\njsPsych was created with the goal of making web-based behavioral experiments as easy as possible for those who do not have a background in web development or any other kind of computer programming. Thus, novice users are an essential part of this community. The involvement of beginner programmers is not only welcome, but critical for the continued success of the project.\nSimilarly, a core aim of the jsPsych project is to make web-based behavioral experiments accessible to anyone who wishes to utilize them. We can better achieve this goal with diverse voices guiding the project, and we value participation from those who bring different perspectives to our community. We actively encourage participation from those who come from historically underrepresented groups in software development and STEM.\n\n\n\nBe friendly and patient: Remember that you might not be communicating in someone else’s primary spoken or programming language, and that we don’t all have the same background knowledge and experience.\nBe helpful: Offer constructive feedback on others’ ideas and code.\nBe collaborative: Collaboration improves the efficiency and quality of our work. We aim to understand the needs of other users, and to work transparently with others to coordinate our efforts.\nBe considerate and respectful: There is no excuse for disrespectful behavior. When making comments in public spaces, we should consider the potential impact on the whole community. For instance, jokes/teasing may seem harmless among users who are familiar with one another, but this can be intimidating and off-putting for other community members.\nAsk for help and seek feedback: We’re all learning, and no one is expected to be perfect. Asking questions and seeking feedback early on can help us work efficiently and avoid bigger problems in the future.\nTake responsibility for your actions: We all make mistakes; when we do, we take responsibility for them. If someone has been harmed or offended, we listen carefully and respectfully, and work to improve our behavior.\nValue decisiveness, clarity, and consensus: We hope that jsPsych contributors can resolve disagreements constructively, using clear rationale for their perspective, and with humility. When they cannot, the project leader can offer clarity and direction.\n\n\n\n\nThe community’s core principles apply to all private and public spaces where the jsPsych project is officially managed, promoted, or discussed. Examples include all of the jsPsych-related GitHub repos (issues, commit messages, pull requests, etc.), the jsPsych Google Group, and anyone acting as a representative of the project, whether in person or online, including via social media and email. We expect this Code of Conduct to be honoured by everyone in the jsPsych community.\n\n\n\n\nWe encourage all participants in the jsPsych community to feel empowered to lead, to take action, and to experiment when they feel that innovation could improve the project. There is no need to wait for delegation or permission - leadership can be exercised by anyone simply by taking action.\nAlthough we strive to make jsPsych as open and collaborative as possible, it’s important to have a project leader in order to ensure that jsPsych remains (1) as accessible as possible for all users, (2) stable and reliable, (3) easy to maintain, (4) internally consistent, etc.\nSuch leadership occasionally requires decisions that are in the best interest of the project but may not be understood by or beneficial to everyone. These decisions are important because they keep the project on track, and enable it to move forward faster than if we required complete consensus. Any major decisions taken by the project leader should be mindful of the challenges they may present for others. We expect the project leader to communicate major decisions/changes early on, and to provide their reasoning.\n\n\nWe invite anyone to contribute to any aspect of the project. You can find more information about contributing here: https://www.jspsych.org/latest/developers/contributing/\nBecause changes to the jsPsych library can have a huge potential for impact on all users, any proposed changes to the library have to be considered very carefully. For this reason, it is always a good idea to check with the project leader about whether your proposed contribution would likely be merged into the jsPsych library. Keep in mind that, even if your work isn’t suitable for merging into the jsPsych library, you can still use it in your own projects and share it publicly with others, e.g. via a separate GitHub repository.\nContributors are acknowledged in the contributors.md file in the jsPsych GitHub repo, and in the notes for each release. If you feel that your contribution has been overlooked, please contact Josh de Leeuw (josh.deleeuw@gmail.com). We also encourage opening a pull request to modify the contributors.md file.\n\n\n\nWe expect jsPsych users and developers to be aware when they are conflicted due to employment or other projects they are involved in, and to abstain or delegate decisions that may be seen to be self-interested. We expect that everyone who participates in the jsPsych community does so with the goal of improving the library for all of its users.\n\n\n\n\nIn the event that a Code of Conduct issue cannot be resolved among users, please feel free to report your concerns to Josh de Leeuw (josh.deleeuw@gmail.com). If Josh de Leeuw is involved in the issue, you can report it to Becky Gilbert instead (beckyannegilbert@gmail.com). In your report, please include as much information as possible about what occurred, including any relevant links/attachments.\nAll reports will be reviewed by a multi-person team and will result in a response that is deemed necessary and appropriate to the circumstances. Where additional perspectives are needed, the team may seek insight from others with relevant expertise or experience. The confidentiality of the person reporting the incident will be kept at all times. Involved parties are never part of the review team. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the review team may take any action they deem appropriate, including a permanent ban from the community.\nThis code is not exhaustive or complete. It serves to capture our common understanding of a welcoming, productive, and collaborative environment. We expect the code to be followed in spirit as much as in the letter.\n\n\n\nThis document was based on, or inspired by, the following Codes of Conduct: * Ubuntu https://ubuntu.com/community/code-of-conduct * Microsoft https://opensource.microsoft.com/codeofconduct/ * Contributor Covenant https://www.contributor-covenant.org/version/1/4/code-of-conduct"
  },
  {
    "objectID": "jspsych/code-of-conduct.html#community",
    "href": "jspsych/code-of-conduct.html#community",
    "title": "jsPsych Code of Conduct",
    "section": "",
    "text": "jsPsych aims to provide a productive, helpful, and agile community that: * Welcomes new users and ideas * Seeks to improve the jsPsych library for all users * Works toward best scientific practices * Ensures that jsPsych remains as accessible as possible\nWe hope that this community will encourage collaboration between users/groups with different needs, interests, and skills.\njsPsych was created with the goal of making web-based behavioral experiments as easy as possible for those who do not have a background in web development or any other kind of computer programming. Thus, novice users are an essential part of this community. The involvement of beginner programmers is not only welcome, but critical for the continued success of the project.\nSimilarly, a core aim of the jsPsych project is to make web-based behavioral experiments accessible to anyone who wishes to utilize them. We can better achieve this goal with diverse voices guiding the project, and we value participation from those who bring different perspectives to our community. We actively encourage participation from those who come from historically underrepresented groups in software development and STEM.\n\n\n\nBe friendly and patient: Remember that you might not be communicating in someone else’s primary spoken or programming language, and that we don’t all have the same background knowledge and experience.\nBe helpful: Offer constructive feedback on others’ ideas and code.\nBe collaborative: Collaboration improves the efficiency and quality of our work. We aim to understand the needs of other users, and to work transparently with others to coordinate our efforts.\nBe considerate and respectful: There is no excuse for disrespectful behavior. When making comments in public spaces, we should consider the potential impact on the whole community. For instance, jokes/teasing may seem harmless among users who are familiar with one another, but this can be intimidating and off-putting for other community members.\nAsk for help and seek feedback: We’re all learning, and no one is expected to be perfect. Asking questions and seeking feedback early on can help us work efficiently and avoid bigger problems in the future.\nTake responsibility for your actions: We all make mistakes; when we do, we take responsibility for them. If someone has been harmed or offended, we listen carefully and respectfully, and work to improve our behavior.\nValue decisiveness, clarity, and consensus: We hope that jsPsych contributors can resolve disagreements constructively, using clear rationale for their perspective, and with humility. When they cannot, the project leader can offer clarity and direction.\n\n\n\n\nThe community’s core principles apply to all private and public spaces where the jsPsych project is officially managed, promoted, or discussed. Examples include all of the jsPsych-related GitHub repos (issues, commit messages, pull requests, etc.), the jsPsych Google Group, and anyone acting as a representative of the project, whether in person or online, including via social media and email. We expect this Code of Conduct to be honoured by everyone in the jsPsych community."
  },
  {
    "objectID": "jspsych/code-of-conduct.html#leadership",
    "href": "jspsych/code-of-conduct.html#leadership",
    "title": "jsPsych Code of Conduct",
    "section": "",
    "text": "We encourage all participants in the jsPsych community to feel empowered to lead, to take action, and to experiment when they feel that innovation could improve the project. There is no need to wait for delegation or permission - leadership can be exercised by anyone simply by taking action.\nAlthough we strive to make jsPsych as open and collaborative as possible, it’s important to have a project leader in order to ensure that jsPsych remains (1) as accessible as possible for all users, (2) stable and reliable, (3) easy to maintain, (4) internally consistent, etc.\nSuch leadership occasionally requires decisions that are in the best interest of the project but may not be understood by or beneficial to everyone. These decisions are important because they keep the project on track, and enable it to move forward faster than if we required complete consensus. Any major decisions taken by the project leader should be mindful of the challenges they may present for others. We expect the project leader to communicate major decisions/changes early on, and to provide their reasoning.\n\n\nWe invite anyone to contribute to any aspect of the project. You can find more information about contributing here: https://www.jspsych.org/latest/developers/contributing/\nBecause changes to the jsPsych library can have a huge potential for impact on all users, any proposed changes to the library have to be considered very carefully. For this reason, it is always a good idea to check with the project leader about whether your proposed contribution would likely be merged into the jsPsych library. Keep in mind that, even if your work isn’t suitable for merging into the jsPsych library, you can still use it in your own projects and share it publicly with others, e.g. via a separate GitHub repository.\nContributors are acknowledged in the contributors.md file in the jsPsych GitHub repo, and in the notes for each release. If you feel that your contribution has been overlooked, please contact Josh de Leeuw (josh.deleeuw@gmail.com). We also encourage opening a pull request to modify the contributors.md file.\n\n\n\nWe expect jsPsych users and developers to be aware when they are conflicted due to employment or other projects they are involved in, and to abstain or delegate decisions that may be seen to be self-interested. We expect that everyone who participates in the jsPsych community does so with the goal of improving the library for all of its users."
  },
  {
    "objectID": "jspsych/code-of-conduct.html#reporting-code-of-conduct-issues",
    "href": "jspsych/code-of-conduct.html#reporting-code-of-conduct-issues",
    "title": "jsPsych Code of Conduct",
    "section": "",
    "text": "In the event that a Code of Conduct issue cannot be resolved among users, please feel free to report your concerns to Josh de Leeuw (josh.deleeuw@gmail.com). If Josh de Leeuw is involved in the issue, you can report it to Becky Gilbert instead (beckyannegilbert@gmail.com). In your report, please include as much information as possible about what occurred, including any relevant links/attachments.\nAll reports will be reviewed by a multi-person team and will result in a response that is deemed necessary and appropriate to the circumstances. Where additional perspectives are needed, the team may seek insight from others with relevant expertise or experience. The confidentiality of the person reporting the incident will be kept at all times. Involved parties are never part of the review team. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the review team may take any action they deem appropriate, including a permanent ban from the community.\nThis code is not exhaustive or complete. It serves to capture our common understanding of a welcoming, productive, and collaborative environment. We expect the code to be followed in spirit as much as in the letter."
  },
  {
    "objectID": "jspsych/code-of-conduct.html#references",
    "href": "jspsych/code-of-conduct.html#references",
    "title": "jsPsych Code of Conduct",
    "section": "",
    "text": "This document was based on, or inspired by, the following Codes of Conduct: * Ubuntu https://ubuntu.com/community/code-of-conduct * Microsoft https://opensource.microsoft.com/codeofconduct/ * Contributor Covenant https://www.contributor-covenant.org/version/1/4/code-of-conduct"
  },
  {
    "objectID": "jspsych/contributors.html",
    "href": "jspsych/contributors.html",
    "title": "Blog",
    "section": "",
    "text": "The following people have contributed to the development of jsPsych by writing code, documentation, and/or suggesting improvements (in alphabetical order): * alisdt - https://github.com/alisdt * Antonia - https://github.com/Ahoidal * aucuparia - https://github.com/aucuparia * Xiaolu Bai - https://github.com/lbai001 * bjoluc - https://github.com/bjoluc * Christian Brickhouse - https://github.com/chrisbrickhouse * Teon L Brooks - https://github.com/teonbrooks * Eamon Caddigan - https://github.com/eamoncaddigan * Jason Carpenter * Steve Chao - https://github.com/stchao * Zhanwen “Phil” Chen - https://github.com/zhanwenchen * cthorey - https://github.com/cthorey * Guy Davidson - https://github.com/guydav * Kristin Diep - https://github.com/kristiyip * Ari Dyckovsky - https://github.com/aridyckovsky * Etienne Gaudrain - https://github.com/egaudrain * Jon Gauthier - https://github.com/hans * Robert Gibboni - https://github.com/r-b-g-b * Becky Gilbert - https://github.com/becky-gilbert * Mark Gorenstein - https://github.com/mgorenstein * Rui Han - https://github.com/hrcn * Andy Heusser - https://github.com/andrewheusser * Angus Hughes - https://github.com/awhug * jadeddelta - https://github.com/jadeddelta * Gustavo Juantorena - https://github.com/GEJ1 * Chris Jungerius - https://github.com/cjungerius * George Kachergis - https://github.com/kachergis * Yul Kang - https://github.com/yulkang * Spencer King - https://github.com/spencerking * Jana Klaus - https://github.com/janakl4us * Arnold Kochari - https://github.com/akochari * Peter Jes Kohler - https://github.com/pjkohler * kupiqu - https://github.com/kupiqu * Daiichiro Kuroki - https://github.com/kurokida * Jonas Lambers * madebyafox - https://github.com/madebyafox * Shane Martin - https://github.com/shamrt * Vijay Marupudi - https://github.com/vijaymarupudi * Adrian Oesch - https://github.com/adrianoesch * Benjamin Ooghe-Tabanou - https://github.com/boogheta * Nikolay B Petrov - https://github.com/nikbpetrov * Dillon Plunkett - https://github.com/dillonplunkett * Junyan Qi - https://github.com/GavinQ1 * Sivananda Rajananda - https://github.com/vrsivananda * Dan Rivas - https://github.com/rivasd * Werner Sævland - https://github.com/wernersa * Marian Sauter - https://github.com/mariansauter * Ellen Shapiro - https://github.com/designatednerd * Jan Simson - https://github.com/jansim * Hannah Small - https://github.com/hesmall * sprengholz - https://github.com/sprengholz * Dominik Strohmeier - https://github.com/onkeltom * Nabeel Sulieman - https://github.com/nabsul * Hitoshi Tominaga - https://github.com/tbrotherm * Tim Vergenz - https://github.com/vergenzt * Matteo Visconti di Oleggio Castello - https://github.com/mvdoc * Ilya Vorontsov - https://github.com/VorontsovIE * Wolfgang Walther - https://github.com/wolfgangwalther * Erik Weitnauer - https://github.com/eweitnauer * Rob Wilkinson - https://github.com/RobAWilkinson * Andy Woods - https://github.com/andytwoods * Reto Wyss - https://github.com/retowyss"
  },
  {
    "objectID": "posts/stroop/index.html",
    "href": "posts/stroop/index.html",
    "title": "Stroop",
    "section": "",
    "text": "Here I will be creating two stroop experiments. One is standard and the other manipulates the brightness of the colors of the words. In this manipulated experiment, the words have an opacity value of 0.1. The link below contains both experiments which will be given to subjects in a random order.\nHTML Page"
  },
  {
    "objectID": "posts/reaction-time/index.html",
    "href": "posts/reaction-time/index.html",
    "title": "Reaction Time",
    "section": "",
    "text": "Here I will be creating reaction time expirements based on Donders model.\nHTML Page"
  },
  {
    "objectID": "posts/new-post/index.html",
    "href": "posts/new-post/index.html",
    "title": "New Post",
    "section": "",
    "text": "Hello! This is my first post"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Picture Memory\n\n\n\n\n\n\n\ncode\n\n\nwebsite\n\n\nmemory\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2023\n\n\nCobe Liu\n\n\n\n\n\n\n  \n\n\n\n\nData Analysis\n\n\n\n\n\n\n\ncode\n\n\nwebsite\n\n\nstroop\n\n\ndata\n\n\n\n\n\n\n\n\n\n\n\nOct 4, 2023\n\n\nCobe Liu\n\n\n\n\n\n\n  \n\n\n\n\nStroop\n\n\n\n\n\n\n\ncode\n\n\nwebsite\n\n\n\n\n\n\n\n\n\n\n\nSep 27, 2023\n\n\nCobe Liu\n\n\n\n\n\n\n  \n\n\n\n\nReaction Time\n\n\n\n\n\n\n\ncode\n\n\nwebsite\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2023\n\n\nCobe Liu\n\n\n\n\n\n\n  \n\n\n\n\nHTML/JavaScript\n\n\n\n\n\n\n\ncode\n\n\nwebsite\n\n\npsychology\n\n\n\n\n\n\n\n\n\n\n\nSep 11, 2023\n\n\nCobe Liu\n\n\n\n\n\n\n  \n\n\n\n\nNew Post\n\n\n\n\n\n\n\nthoughts\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\nCobe Liu\n\n\n\n\n\n\nNo matching items"
  }
]